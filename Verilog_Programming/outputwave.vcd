$date
	Mon Mar 17 23:21:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TB $end
$var wire 5 ! s [4:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ cin $end
$scope module uut $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 $ cin $end
$var wire 1 ' cout $end
$var wire 1 ( c2 $end
$var wire 1 ) c1 $end
$var wire 1 * c0 $end
$var wire 5 + Sum [4:0] $end
$var wire 4 , S [3:0] $end
$scope module FA0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 $ cin $end
$var wire 1 * cout $end
$var wire 1 / sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 5 sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 ( cin $end
$var wire 1 ' cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
18
07
16
15
14
03
12
01
10
1/
1.
0-
b1111 ,
b1111 +
0*
0)
0(
0'
b101 &
b1010 %
0$
b101 #
b1010 "
b1111 !
$end
#10
1'
08
1(
05
1)
1*
12
b10010 !
b10010 +
b10 ,
0/
11
04
1-
13
b11 #
b11 &
b1111 "
b1111 %
#20
15
b11110 !
b11110 +
b1110 ,
18
14
17
b1111 #
b1111 &
#30
